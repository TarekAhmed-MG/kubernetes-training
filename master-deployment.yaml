apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  selector:
    app: second-app
  #    the selector in serivce is used to define the pods we want to expose, we dont have to add a tier if we want all the pods in second-app to be used
  #    if we want only a specific pod type we can add the tier below the app like we did in deployment
  ports:
    - protocol: 'TCP'
      port: 80
      #     port is the outside port
      targetPort: 8080
  #     targetPort is the port inside the container
  type: LoadBalancer
#   loadbalancer gives you outside world access and incoming traffic is distributed equally

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: second-app-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: second-app
      tier: backend
  #      because kubernetes deployments are dynamic objects we need to tell the deployment which pods belong to it as we could have multiple pods doing different things

  template:
    metadata:
      labels:
        app: second-app
        tier: backend
    spec:
      containers:
        - name: second-node
          image: tarekahmed97/kub-first-app


# you can add as many objects as you like this file demonstrates this and you can also put deployments and services in the same file
# you must seperate objects with ---
# if you put services and deployments in the same file then you must put services first as kubernetes builds from top to bottom and -
# since it has a selector it can add any pods connected to it after
